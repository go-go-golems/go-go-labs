// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Base(title string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `base.templ`, Line: 9, Col: 16}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " - Agent Fleet</title><link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\"><style>\n\t\t\t.status-active { color: #28a745; }\n\t\t\t.status-idle { color: #6c757d; }\n\t\t\t.status-waiting_feedback { color: #ffc107; }\n\t\t\t.status-error { color: #dc3545; }\n\t\t\t.agent-card { transition: all 0.2s; }\n\t\t\t.agent-card:hover { transform: translateY(-2px); box-shadow: 0 4px 12px rgba(0,0,0,0.15); }\n\t\t\t.needs-feedback { border-left: 4px solid #ffc107; animation: pulse 2s infinite; }\n\t\t\t@keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: 0.7; } }\n\t\t</style></head><body><nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\"><div class=\"container\"><a class=\"navbar-brand\" href=\"/\">ðŸ¤– Agent Fleet</a><div class=\"navbar-nav\"><a class=\"nav-link\" href=\"/\">Dashboard</a> <a class=\"nav-link\" href=\"/agents\">Agents</a></div></div></nav><main class=\"container mt-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</main><script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script><script>\n\t\t\t// Simple SSE connection for real-time updates\n\t\t\tconst eventSource = new EventSource('/v1/stream', {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': 'Bearer fleet-agent-token-123'\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\teventSource.onmessage = function(event) {\n\t\t\t\ttry {\n\t\t\t\t\tconst data = JSON.parse(event.data);\n\t\t\t\t\tconsole.log('SSE Event:', data);\n\t\t\t\t\t\n\t\t\t\t\t// Update UI based on event type\n\t\t\t\t\tif (data.event === 'agent_status_changed') {\n\t\t\t\t\t\tupdateAgentStatus(data.data.agent_id, data.data.new_status);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log('SSE ping or other event');\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tfunction updateAgentStatus(agentId, status) {\n\t\t\t\tconst statusEl = document.querySelector(`[data-agent-id=\"${agentId}\"] .status`);\n\t\t\t\tif (statusEl) {\n\t\t\t\t\tstatusEl.className = `status status-${status}`;\n\t\t\t\t\tstatusEl.textContent = status.replace('_', ' ');\n\t\t\t\t}\n\t\t\t}\n\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
