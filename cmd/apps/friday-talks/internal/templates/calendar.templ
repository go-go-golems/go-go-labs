package templates

import (
	"github.com/go-go-golems/go-go-labs/cmd/apps/friday-talks/internal/models"
	"time"
	"fmt"
)

type CalendarDay struct {
	Date      time.Time
	IsToday   bool
	IsOtherMonth bool
	Talk      *models.Talk
	HasTalk   bool
}

type CalendarMonth struct {
	Month     time.Month
	Year      int
	Days      []CalendarDay
	Weeks     [][7]CalendarDay
}

templ Calendar(user *models.User, months []CalendarMonth, currentMonth time.Month, currentYear int) {
	@Layout("Calendar", user) {
		<div class="d-flex justify-content-between align-items-center mb-4">
			<h1>Calendar</h1>
			if user != nil {
				<a href="/talks/propose" class="btn btn-primary">Propose a Talk</a>
			}
		</div>

		<div class="card mb-4">
			<div class="card-header d-flex justify-content-between align-items-center">
				<h3 class="mb-0">Talk Schedule</h3>
				<div>
					<a href={ templ.SafeURL(fmt.Sprintf("/calendar?month=%d&year=%d", getPreviousMonth(currentMonth), getPreviousYear(currentMonth, currentYear))) } class="btn btn-sm btn-outline-primary me-2">&laquo; Previous</a>
					<a href={ templ.SafeURL(fmt.Sprintf("/calendar?month=%d&year=%d", getNextMonth(currentMonth), getNextYear(currentMonth, currentYear))) } class="btn btn-sm btn-outline-primary">Next &raquo;</a>
				</div>
			</div>
			<div class="card-body">
				for _, month := range months {
					<h4 class="mb-3">{ month.Month.String() } { fmt.Sprintf("%d", month.Year) }</h4>
					<table class="table table-bordered mb-5">
						<thead>
							<tr>
								<th>Sunday</th>
								<th>Monday</th>
								<th>Tuesday</th>
								<th>Wednesday</th>
								<th>Thursday</th>
								<th>Friday</th>
								<th>Saturday</th>
							</tr>
						</thead>
						<tbody>
							for _, week := range month.Weeks {
								<tr>
									for _, day := range week {
										if day.Date.IsZero() {
											<td></td>
										} else {
											<td class={ 
												"calendar-day", 
												templ.KV("has-talk", day.HasTalk),
												templ.KV("today", day.IsToday),
												templ.KV("other-month", day.IsOtherMonth),
											}>
												<div class="d-flex justify-content-between mb-2">
													<div>{ day.Date.Format("2") }</div>
												</div>
												if day.HasTalk {
													<div class="p-1">
														<a href={ templ.SafeURL(fmt.Sprintf("/talks/%d", day.Talk.ID)) } class="d-block">
															<div class="card-body p-1">
																<strong>{ day.Talk.Title }</strong>
																if day.Talk.Speaker != nil {
																	<div class="small text-muted">by { day.Talk.Speaker.Name }</div>
																}
															</div>
														</a>
													</div>
												}
											</td>
										}
									}
								</tr>
							}
						</tbody>
					</table>
				}
			</div>
		</div>
	}
}

func getNextMonth(month time.Month) int {
	if month == time.December {
		return int(time.January)
	}
	return int(month) + 1
}

func getPreviousMonth(month time.Month) int {
	if month == time.January {
		return int(time.December)
	}
	return int(month) - 1
}

func getNextYear(month time.Month, year int) int {
	if month == time.December {
		return year + 1
	}
	return year
}

func getPreviousYear(month time.Month, year int) int {
	if month == time.January {
		return year - 1
	}
	return year
}