Line Interface Key Concepts:
- String of tab-delimited contiguous words
- Contains WORD blocks as children
- Has confidence scores
- Has geometry information

Relevant Documentation Files:
=== BEGIN: cmd/apps/textractor/ttmp/2024-11-29/textract-docs/04-lines-words.txt ===
   AWSDocumentationAmazon TextractDeveloper Guide

Lines and Words of Text

   Detected text that's returned by Amazon Textract operations is returned
   in a list of Block objects. These objects represent lines of text or
   textual words that are detected on a document page. The following text
   shows two lines of text that are made from multiple words.

   This is text.

   In two separate lines.

   Detected text is returned in the Text field of a Block object. The
   BlockType field determines if the text is a line of text (LINE) or a
   word (WORD). A WORD is one or more ISO basic Latin script characters
   that aren't separated by spaces. A LINE is a string of tab-delimited
   and contiguous words.

   Additionally, Amazon Textract will determine if a piece of text was
   handwritten or printed using the TextTypes field. These return as
   HANDWRITING and PRINTED respectively.

   The other Block properties are common to all block types, such as the
   ID, confidence, and geometry information. For more information, see
   Text Detection and Document Analysis Response Objects.

   To detect only lines and words, you can use DetectDocumentText or
   StartDocumentTextDetection. For more information, see Detecting Text.
   To get the detected text (lines and words) and information about how it
   relates to other parts of the document, such as tables, you can use
   AnalyzeDocument or StartDocumentAnalysis. For more information, see
   Analyzing Documents.

   PAGE, LINE, and WORD blocks are related to each other in a
   parent-to-child relationship. A PAGE block is the parent for all LINE
   block objects on a document page. Because a LINE can have one or more
   words, the Relationships array for a LINE block stores the IDs for
   child WORD blocks that make up the line of text.

   The following diagram shows how the line Hello, world. in the text
   Hello, world. How are you? is represented by Block objects.
   Diagram showing text objects "PAGE", "LINE" with two instances, "WORD"
   with two instances, and "Hello, world." Labels and connections depict a
   hierarchical structure.

   The following is the JSON output from DetectDocumentText when the
   sentence Hello, world. How are you? is detected. The first example is
   the JSON for the document page. You can use the CHILD IDs to navigate
   through the document.

   { "Geometry": {...}, "Relationships": [ { "Type": "CHILD", "Ids": [
   "d7fbd604-d609-4d69-857d-247a3f591238", // Line - Hello, world.
   "b6c19a93-6493-4d8e-958f-853c8f7ca055" // Line - How are you? ] } ],
   "BlockType": "PAGE", "Id": "56ec1d77-171f-4881-9852-2b5b7e761608" },

   The following is the JSON for the LINE blocks that make up the line
   "Hello, World":

   { "Relationships": [ { "Type": "CHILD", "Ids": [
   "7f97e2ca-063e-47a8-981c-8beee31afc01", // Word - Hello,
   "4b990aa0-af96-4369-b90f-dbe02538ed21" // Word - world. ] } ],
   "Confidence": 99.63229370117188, "Geometry": {...}, "Text": "Hello,
   world.", "BlockType": "LINE", "Id":
   "d7fbd604-d609-4d69-857d-247a3f591238" },

   The following is the JSON for the WORD block for the word Hello,:

   { "Geometry": {...}, "Text": "Hello,", "TextType": "PRINTED",
   "BlockType": "WORD", "Confidence": 99.74746704101562, "Id":
   "7f97e2ca-063e-47a8-981c-8beee31afc01" },

   The final JSON is the WORD block for the word world.:

   { "Geometry": {...}, "Text": "world.", "TextType": "PRINTED",
   "BlockType": "WORD", "Confidence": 99.5171127319336, "Id":
   "4b990aa0-af96-4369-b90f-dbe02538ed21" },

   Warning Javascript is disabled or is unavailable in your browser.

   To use the Amazon Web Services Documentation, Javascript must be
   enabled. Please refer to your browser's Help pages for instructions.

   Document Conventions
   Pages
   Form Data (Key-Value Pairs)

   Did this page help you? - Yes

   Thanks for letting us know we're doing a good job!

   If you've got a moment, please tell us what we did right so we can do
   more of it.

   Did this page help you? - No

   Thanks for letting us know this page needs work. We're sorry we let you
   down.

   If you've got a moment, please tell us how we can make the
   documentation better.

=== END: cmd/apps/textractor/ttmp/2024-11-29/textract-docs/04-lines-words.txt ===

=== BEGIN: cmd/apps/textractor/ttmp/2024-11-29/textract-api-docs/api-Block.txt ===
   AWSDocumentationAmazon TextractDeveloper Guide
   ContentsSee Also

Block

   A Block represents items that are recognized in a document within a
   group of pixels close to each other. The information returned in a
   Block object depends on the type of operation. In text detection for
   documents (for example DetectDocumentText), you get information about
   the detected words and lines of text. In text analysis (for example
   AnalyzeDocument), you can also get information about the fields,
   tables, and selection elements that are detected in the document.

   An array of Block objects is returned by both synchronous and
   asynchronous operations. In synchronous operations, such as
   DetectDocumentText, the array of Block objects is the entire set of
   results. In asynchronous operations, such as GetDocumentAnalysis, the
   array is returned over one or more responses.

   For more information, see How Amazon Textract Works.

Contents

   BlockType
          The type of text item that's recognized. In operations for text
          detection, the following types are returned:

          + PAGE - Contains a list of the LINE Block objects that are
            detected on a document page.
          + WORD - A word detected on a document page. A word is one or
            more ISO basic Latin script characters that aren't separated
            by spaces.
          + LINE - A string of tab-delimited, contiguous words that are
            detected on a document page.

          In text analysis operations, the following types are returned:

          + PAGE - Contains a list of child Block objects that are
            detected on a document page.
          + KEY_VALUE_SET - Stores the KEY and VALUE Block objects for
            linked text that's detected on a document page. Use the
            EntityType field to determine if a KEY_VALUE_SET object is a
            KEY Block object or a VALUE Block object.
          + WORD - A word that's detected on a document page. A word is
            one or more ISO basic Latin script characters that aren't
            separated by spaces.
          + LINE - A string of tab-delimited, contiguous words that are
            detected on a document page.
          + TABLE - A table that's detected on a document page. A table is
            grid-based information with two or more rows or columns, with
            a cell span of one row and one column each.
          + TABLE_TITLE - The title of a table. A title is typically a
            line of text above or below a table, or embedded as the first
            row of a table.
          + TABLE_FOOTER - The footer associated with a table. A footer is
            typically a line or lines of text below a table or embedded as
            the last row of a table.
          + CELL - A cell within a detected table. The cell is the parent
            of the block that contains the text in the cell.
          + MERGED_CELL - A cell in a table whose content spans more than
            one row or column. The Relationships array for this cell
            contain data from individual cells.
          + SELECTION_ELEMENT - A selection element such as an option
            button (radio button) or a check box that's detected on a
            document page. Use the value of SelectionStatus to determine
            the status of the selection element.
          + SIGNATURE - The location and confidence score of a signature
            detected on a document page. Can be returned as part of a
            Key-Value pair or a detected cell.
          + QUERY - A question asked during the call of AnalyzeDocument.
            Contains an alias and an ID that attaches it to its answer.
          + QUERY_RESULT - A response to a question asked during the call
            of analyze document. Comes with an alias and ID for ease of
            locating in a response. Also contains location and confidence
            score.

          The following BlockTypes are only returned for Amazon Textract
          Layout.

          + LAYOUT_TITLE - The main title of the document.
          + LAYOUT_HEADER - Text located in the top margin of the
            document.
          + LAYOUT_FOOTER - Text located in the bottom margin of the
            document.
          + LAYOUT_SECTION_HEADER - The titles of sections within a
            document.
          + LAYOUT_PAGE_NUMBER - The page number of the documents.
          + LAYOUT_LIST - Any information grouped together in list form.
          + LAYOUT_FIGURE - Indicates the location of an image in a
            document.
          + LAYOUT_TABLE - Indicates the location of a table in the
            document.
          + LAYOUT_KEY_VALUE - Indicates the location of form key-values
            in a document.
          + LAYOUT_TEXT - Text that is present typically as a part of
            paragraphs in documents.

          Type: String

          Valid Values: KEY_VALUE_SET | PAGE | LINE | WORD | TABLE | CELL
          | SELECTION_ELEMENT | MERGED_CELL | TITLE | QUERY | QUERY_RESULT
          | SIGNATURE | TABLE_TITLE | TABLE_FOOTER | LAYOUT_TEXT |
          LAYOUT_TITLE | LAYOUT_HEADER | LAYOUT_FOOTER |
          LAYOUT_SECTION_HEADER | LAYOUT_PAGE_NUMBER | LAYOUT_LIST |
          LAYOUT_FIGURE | LAYOUT_TABLE | LAYOUT_KEY_VALUE

          Required: No

   ColumnIndex
          The column in which a table cell appears. The first column
          position is 1. ColumnIndex isn't returned by DetectDocumentText
          and GetDocumentTextDetection.

          Type: Integer

          Valid Range: Minimum value of 0.

          Required: No

   ColumnSpan
          The number of columns that a table cell spans. ColumnSpan isn't
          returned by DetectDocumentText and GetDocumentTextDetection.

          Type: Integer

          Valid Range: Minimum value of 0.

          Required: No

   Confidence
          The confidence score that Amazon Textract has in the accuracy of
          the recognized text and the accuracy of the geometry points
          around the recognized text.

          Type: Float

          Valid Range: Minimum value of 0. Maximum value of 100.

          Required: No

   EntityTypes
          The type of entity.

          The following entity types can be returned by FORMS analysis:

          + KEY - An identifier for a field on the document.
          + VALUE - The field text.

          The following entity types can be returned by TABLES analysis:

          + COLUMN_HEADER - Identifies a cell that is a header of a
            column.
          + TABLE_TITLE - Identifies a cell that is a title within the
            table.
          + TABLE_SECTION_TITLE - Identifies a cell that is a title of a
            section within a table. A section title is a cell that
            typically spans an entire row above a section.
          + TABLE_FOOTER - Identifies a cell that is a footer of a table.
          + TABLE_SUMMARY - Identifies a summary cell of a table. A
            summary cell can be a row of a table or an additional, smaller
            table that contains summary information for another table.
          + STRUCTURED_TABLE - Identifies a table with column headers
            where the content of each row corresponds to the headers.
          + SEMI_STRUCTURED_TABLE - Identifies a non-structured table.

          EntityTypes isn't returned by DetectDocumentText and
          GetDocumentTextDetection.

          Type: Array of strings

          Valid Values: KEY | VALUE | COLUMN_HEADER | TABLE_TITLE |
          TABLE_FOOTER | TABLE_SECTION_TITLE | TABLE_SUMMARY |
          STRUCTURED_TABLE | SEMI_STRUCTURED_TABLE

          Required: No

   Geometry
          The location of the recognized text on the image. It includes an
          axis-aligned, coarse bounding box that surrounds the text, and a
          finer-grain polygon for more accurate spatial information.

          Type: Geometry object

          Required: No

   Id
          The identifier for the recognized text. The identifier is only
          unique for a single operation.

          Type: String

          Pattern: .*\S.*

          Required: No

   Page
          The page on which a block was detected. Page is returned by
          synchronous and asynchronous operations. Page values greater
          than 1 are only returned for multipage documents that are in PDF
          or TIFF format. A scanned image (JPEG/PNG) provided to an
          asynchronous operation, even if it contains multiple document
          pages, is considered a single-page document. This means that for
          scanned images the value of Page is always 1.

          Type: Integer

          Valid Range: Minimum value of 0.

          Required: No

   Query
          Type: Query object

          Required: No

   Relationships
          A list of relationship objects that describe how blocks are
          related to each other. For example, a LINE block object contains
          a CHILD relationship type with the WORD blocks that make up the
          line of text. There aren't Relationship objects in the list for
          relationships that don't exist, such as when the current block
          has no child blocks.

          Type: Array of Relationship objects

          Required: No

   RowIndex
          The row in which a table cell is located. The first row position
          is 1. RowIndex isn't returned by DetectDocumentText and
          GetDocumentTextDetection.

          Type: Integer

          Valid Range: Minimum value of 0.

          Required: No

   RowSpan
          The number of rows that a table cell spans. RowSpan isn't
          returned by DetectDocumentText and GetDocumentTextDetection.

          Type: Integer

          Valid Range: Minimum value of 0.

          Required: No

   SelectionStatus
          The selection status of a selection element, such as an option
          button or check box.

          Type: String

          Valid Values: SELECTED | NOT_SELECTED

          Required: No

   Text
          The word or line of text that's recognized by Amazon Textract.

          Type: String

          Required: No

   TextType
          The kind of text that Amazon Textract has detected. Can check
          for handwritten text and printed text.

          Type: String

          Valid Values: HANDWRITING | PRINTED

          Required: No

See Also

   For more information about using this API in one of the
   language-specific AWS SDKs, see the following:
     * AWS SDK for C++
     * AWS SDK for Java V2
     * AWS SDK for Ruby V3

   Warning Javascript is disabled or is unavailable in your browser.

   To use the Amazon Web Services Documentation, Javascript must be
   enabled. Please refer to your browser's Help pages for instructions.
   Document Conventions
   AnalyzeIDDetections
   BoundingBox
   Did this page help you? - Yes

   Thanks for letting us know we're doing a good job!

   If you've got a moment, please tell us what we did right so we can do
   more of it.

   Did this page help you? - No

   Thanks for letting us know this page needs work. We're sorry we let you
   down.

   If you've got a moment, please tell us how we can make the
   documentation better.

=== END: cmd/apps/textractor/ttmp/2024-11-29/textract-api-docs/api-Block.txt ===



